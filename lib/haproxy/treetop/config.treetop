# frozen_string_literal: true

require 'haproxy/treetop/configuration_file'

module HAProxy::Treetop

  grammar NewConfig
    # The entire configuration including all sections and lines.
    rule configuration
      (
        comment_line /
        blank_line /
        global_section /
        defaults_section /
        backend_section /
        frontend_section /
        listen_section /
        userlist_section /
        resolvers_section /
        cache_section /
        peers_section /
        mailers_section
      )* <ConfigurationFile>
    end

    rule global_section
      global_header parameter_block <GlobalSection>
    end

    rule global_header
      whitespace "global" whitespace comment_text? line_break <NamedHeader>
    end

    rule backend_section
      backend_header parameter_block <BackendSection>
    end

    rule backend_header
      whitespace "backend" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule frontend_section
      frontend_header parameter_block <FrontendSection>
    end

    rule frontend_header
      whitespace "frontend" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule listen_section
      listen_header parameter_block <ListenSection>
    end

    rule listen_header
      whitespace "listen" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule defaults_section
      defaults_header parameter_block <DefaultsSection>
    end

    rule defaults_header
      whitespace "defaults" whitespace section_name? whitespace comment_text? line_break <NamedHeader>
    end

    rule userlist_section
      userlist_header userlist_block <Userlist::Section>
    end

    rule userlist_header
      whitespace "userlist" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule resolvers_section
      resolvers_header parameter_block <ResolversSection>
    end

    rule resolvers_header
      whitespace "resolvers" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule cache_section
      cache_header parameter_block <CacheSection>
    end

    rule cache_header
      whitespace "cache" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule peers_section
      peers_header parameter_block <PeersSection>
    end

    rule peers_header
      whitespace "peers" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule mailers_section
      mailers_header parameter_block <MailersSection>
    end

    rule mailers_header
      whitespace "mailers" whitespace section_name whitespace comment_text? line_break <NamedHeader>
    end

    rule section_name
      [a-zA-Z0-9_\-\.:]+ <SectionName>
    end

    rule parameter_block
      (
        option_line /
        server_line /
        parameter_line /
        comment_line /
        blank_line
      )*
    end

    rule header_keyword
      "defaults" / "global" / "listen" / "frontend" / "backend" / "userlist" / "peers" / "mailers" / "cache" / "resolvers"
    end

    rule option_line
      whitespace negation? whitespace "option" whitespace keyword whitespace parameter_value (comment_text / '') line_break <OptionLine>
    end

    rule server_line
      whitespace "server" whitespace keyword whitespace parameter_value (comment_text / '') line_break <ServerLine>
    end

    rule parameter_line
      whitespace !header_keyword keyword whitespace parameter_value (comment_text / '') line_break <ParameterLine>
    end

    rule negation
      "no" <Negation>
    end

    rule comment_line
      whitespace comment_text line_break <CommentLine>
    end

    rule blank_line
      whitespace line_break <BlankLine>
    end

    rule userlist_block
      (user_line / group_line / comment_line / blank_line)*
    end

    # userlist section -- user parameter line
    rule user_line
      whitespace "user" whitespace userlist_name whitespace (password / insecure_password) whitespace group_name_list? comment_text? line_break <Userlist::UserLine>
    end

    # userlist section -- group parameter line
    rule group_line
      whitespace "group" whitespace userlist_name whitespace user_name_list? whitespace comment_text? line_break <Userlist::GroupLine>
    end

    rule password
      "password" whitespace [^\s]+ <Userlist::Password>
    end

    rule insecure_password
      "insecure-password" whitespace [^\s]+ <Userlist::InsecurePassword>
    end

    rule group_name_list
      whitespace "groups" whitespace userlist_name_list <Userlist::NameList>
    end

    rule user_name_list
      whitespace "users" whitespace userlist_name_list <Userlist::NameList>
    end

    rule userlist_name_list
      # (userlist_name / "," / whitespace)* # why doesn't this work?
      [a-zA-Z0-9\-_ \t,]+
    end

    rule userlist_name
      [a-zA-Z0-9\-_]+
    end

    # rule service_address
    #   host [:]? port
    # end

    # rule host
    #   ipv4_host / dns_host / wildcard_host
    # end

    # rule port
    #   [\d]*
    # end

    # rule ipv4_host
    #   [\d] 1..3 '.' [\d] 1..3 '.' [\d] 1..3 '.' [\d] 1..3
    # end

    # rule wildcard_host
    #   "*"
    # end

    # rule dns_host
    #   [a-zA-Z\-\.\d] 4..255
    # end

    rule comment_text
      '#' char* &line_break <CommentText>
    end

    rule whitespace
      [ \t]*
    end

    rule char
      ![\n] .
    end

    # A parameter keyword
    rule keyword
       [a-z0-9_\-\.]+
    end

    # Everything after the keyword, but before a comment or the end of the line
    rule parameter_value
      [^#\n]*
    end

    # The end of the line
    rule line_break
      [\n]
    end
  end

#   grammar Config
#     rule configuration
#       (comment_line / blank_line / global_section / defaults_section / userlist_section / listen_section / frontend_section / backend_section)* <ConfigurationFile>
#     end

#     rule global_section
#       global_header config_block <GlobalSection>
#     end

#     rule defaults_section
#       defaults_header config_block <DefaultsSection>
#     end

#     rule userlist_section
#       userlist_header config_block <UserlistSection>
#     end

#     rule listen_section
#       listen_header config_block <ListenSection>
#     end

#     rule frontend_section
#       frontend_header config_block <FrontendSection>
#     end

#     rule backend_section
#       backend_header config_block <BackendSection>
#     end

#     rule global_header
#       whitespace "global" whitespace comment_text? line_break
#     end

#     rule userlist_header
#       whitespace "userlist" whitespace proxy_name comment_text? line_break
#     end

#     rule defaults_header
#       whitespace "defaults" whitespace proxy_name? whitespace comment_text? line_break <DefaultsHeader>
#     end

#     rule listen_header
#       whitespace "listen" whitespace proxy_name whitespace service_address? value? comment_text? line_break <ListenHeader>
#     end

#     rule frontend_header
#       whitespace "frontend" whitespace proxy_name whitespace service_address? value? comment_text? line_break <FrontendHeader>
#     end

#     rule backend_header
#       whitespace "backend" whitespace proxy_name whitespace value? comment_text? line_break
#     end

#     rule config_block
#       (user_line / group_line / server_line / option_line / config_line / comment_line / blank_line)*
#     end

#     rule server_line
#       whitespace "server" whitespace server_name whitespace service_address value? comment_text? line_break <ServerLine>
#     end

#     rule option_line
#       whitespace "option" whitespace keyword whitespace value? comment_text? line_break <OptionLine>
#     end

#     rule config_line
#       whitespace !("defaults" / "global" / "listen" / "frontend" / "backend" / "userlist") keyword whitespace value? comment_text? line_break <ConfigLine>
#     end

#     rule user_line
#       whitespace "user" whitespace name whitespace (password / insecure_password) whitespace? group_names? <UserLine>
#     end

#     rule group_line
#       whitespace "group" whitespace name whitespace user_names? <GroupLine>
#     end

#     rule password
#       "password" whitespace [^\s]+ <Password>
#     end

#     rule insecure_password
#       "insecure-password" whitespace [^\s]+ <InsecurePassword>
#     end

#     rule group_names
#       whitespace "groups" whitespace name_list <GroupNames>
#     end

#     rule user_names
#       whitespace "users" whitespace name_list <UserNames>
#     end

#     rule comment_line
#       whitespace comment_text line_break <CommentLine>
#     end

#     rule blank_line
#       whitespace line_break <BlankLine>
#     end

#     rule comment_text
#       '#' char* &line_break <CommentText>
#     end

#     rule line_break
#       [\n] <LineBreak>
#     end

#     rule keyword
#        (("errorfile" / "timeout") whitespace)? [a-z0-9_\-\.]+ <Keyword>
#     end

#     rule server_name
#       [a-zA-Z0-9\-_\.:]+ <ServerName>
#     end

#     rule service_address
#       host [:]? port <ServiceAddress>
#     end

#     rule host
#       ipv4_host / dns_host / wildcard_host
#     end

#     rule port
#       [\d]* <Port>
#     end

#     rule ipv4_host
#       [\d] 1..3 '.' [\d] 1..3 '.' [\d] 1..3 '.' [\d] 1..3 <Host>
#     end

#     rule wildcard_host
#       "*" <Host>
#     end

#     rule dns_host
#       [a-zA-Z\-\.\d] 4..255 <Host>
#     end

#     rule proxy_name
#       [a-zA-Z0-9\-_\.:]+ <ProxyName>
#     end

#     rule name_list
#       (name / ",")* <NameList>
#     end

#     rule name
#       [a-zA-Z0-9\-_]+ <Name>
#     end

#     rule value
#       [^#\n]+ <Value>
#     end

#     rule char
#       ![\n] . <Char>
#     end

#     rule whitespace
#       [ \t]* <Whitespace>
#     end

# # Valid Global Keywords (1.4)
# # * Process management and security
# #   - chroot <jail dir>
# #   - daemon
# #   - gid <number>
# #   - group <group name>
# #   - log <address> <facility> [max level [min level]]
# #   - log-send-hostname [<string>]
# #   ? log-tag <string>
# #   - nbproc <number>
# #   - pidfile <pidfile>
# #   - uid <number>
# #   - ulimit-n <number>
# #   - user <user name>
# #   - stats socket <path> [{uid | user} <uid>] [{gid | group} <gid>] [mode <mode>] [level <level>]
# #   - stats timeout <timeout, in milliseconds>
# #   - stats maxconn <connections>
# #   - node <name>
# #   - description <text>
# #
# # * Performance tuning
# #   - maxconn <number>
# #   - maxpipes <number>
# #   - noepoll
# #   - nokqueue
# #   - nopoll
# #   - nosepoll
# #   - nosplice
# #   - spread-checks <0..50, in percent>
# #   - tune.bufsize <number>
# #   - tune.chksize <number>
# #   - tune.maxaccept <number>
# #   - tune.maxpollevents <number>
# #   - tune.maxrewrite <number>
# #   - tune.rcvbuf.client <number>
# #   - tune.rcvbuf.server <number>
# #   - tune.sndbuf.client <number>
# #   - tune.sndbuf.server <number>
# #
# # * Debugging
# #   - debug
# #   - quiet

# # Valid Userlist keywords
# #   - userlist <listname>
# #   - group <groupname> [users <user>,<user>,(...)]
# #   - user <username> [password|insecure-password <password>] [groups <group>,<group>,(...)]


#   end
end
